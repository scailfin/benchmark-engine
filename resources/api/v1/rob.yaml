swagger: "2.0"
info:
  description: "API specification for the Web server of the Reproducible Open Benchmarks for Data Analysis platform."
  version: "0.1.0"
  title: "Reproducible Open Benchmarks - Web API"
  contact:
    email: "heiko.muller@gmail.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "benchmarks.io"
basePath: "/api/v1"
tags:
- name: "service"
  description: "Service description"
- name: "benchmark"
  description: "Benchmark workflow templates"
- name: "submission"
  description: "User submissions for benchmarks"
- name: "user"
  description: "Authenticate and register users"
schemes:
- "http"
paths:
# ------------------------------------------------------------------------------
# Service
# ------------------------------------------------------------------------------
  /:
    get:
      tags:
      - "service"
      summary: "Service descriptor"
      description: "Get service descriptor"
      operationId: "serviceDescriptor"
      produces:
      - "application/json"
      responses:
        200:
          description: "Service descriptor"
          schema:
            $ref: "#/definitions/ServiceDescriptor"
# ------------------------------------------------------------------------------
# Benchmarks
# ------------------------------------------------------------------------------
  /benchmarks:
    get:
      tags:
      - "benchmark"
      summary: "List benchmarks"
      description: "Get listing of all current benchmark"
      operationId: "listBenchmarks"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "Listing of benchmark descriptors"
          schema:
            $ref: "#/definitions/BenchmarkListing"
        403:
          description: "Forbidden operation"
  /benchmarks/{benchmarkId}:
    get:
      tags:
      - "benchmark"
      summary: "Get benchmark handle"
      description: "Get handle for the given benchmark"
      operationId: "getBenchmark"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - in: "path"
        name: "benchmarkId"
        description: "Unique benchmark identifier"
        required: true
        type: string
      responses:
        200:
          description: "Benchmark handle"
          schema:
            $ref: "#/definitions/BenchmarkHandle"
        403:
          description: "Forbidden operation"
  /benchmarks/{benchmarkId}/leaderboard:
    get:
      tags:
      - "benchmark"
      summary: "Get benchmark leaderboard"
      description: "Get full leaderboard for the given benchmark"
      operationId: "benchmarkLeaderboard"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - in: "path"
        name: "benchmarkId"
        description: "Unique benchmark identifier"
        required: true
        type: string
      responses:
        200:
          description: "Benchmark leaderboard"
          schema:
            $ref: "#/definitions/BenchmarkLeaderboard"
        403:
          description: "Forbidden operation"
# ------------------------------------------------------------------------------
# Submissions
# ------------------------------------------------------------------------------
  /benchmarks/{benchmarkId}/submissions/{submissionId}/run:
    post:
      tags:
      - "submission"
      summary: "Run benchmark"
      description: "Submit arguments for a new benchmark run"
      operationId: "runBenchmark"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - in: "path"
        name: "benchmarkId"
        description: "Unique benchmark identifier"
        required: true
        type: string
      - in: "path"
        name: "submissionId"
        description: "Unique submission identifier"
        required: true
        type: string
      - name: body
        in: body
        required: true
        description: Run arguments
        schema:
            $ref: '#/definitions/RunArguments'
      responses:
        200:
          description: "Run state"
          schema:
            $ref: "#/definitions/RunState"
        403:
          description: "Forbidden operation"
# ------------------------------------------------------------------------------
# Users
# ------------------------------------------------------------------------------
  /user/activate:
    post:
      tags:
      - "user"
      summary: "Activate a new user"
      description: "Activate a newly registered user"
      operationId: "activateUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User name and password"
        required: true
        schema:
          $ref: "#/definitions/UserIdentifier"
      responses:
        200:
          description: "User activated successfully"
          schema:
            $ref: "#/definitions/UserHandle"
  /user/login:
    post:
      tags:
      - "user"
      summary: "User login"
      description: "Logs user into the system"
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User name and password"
        required: true
        schema:
          $ref: "#/definitions/UserCredentials"
      responses:
        200:
          description: "User logged in successfully"
          schema:
            $ref: "#/definitions/UserHandle"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logout user"
      description: "Logs current user out"
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "User logged out successfully"
          schema:
            $ref: "#/definitions/UserHandle"
        403:
          description: "Forbidden operation"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register user"
      description: "Create a new user"
      operationId: "registerUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User name and password"
        required: true
        schema:
          $ref: "#/definitions/UserCredentials"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserHandle"
        400:
          description: "Invalid or existing username supplied"
  /user/whoami:
    get:
      tags:
      - "user"
      summary: "Get user information"
      description: "Get information about user that is associated with the provided access token"
      operationId: "whoami"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "User Handle"
          schema:
            $ref: "#/definitions/UserHandle"
        403:
          description: "Forbidden operation"
# ------------------------------------------------------------------------------
# Definition of data structures (models)
# ------------------------------------------------------------------------------
definitions:
  BenchmarkDescriptor:
    type: object
    required:
    - id
    - name
    - links
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      instructions:
        type: string
      links:
        $ref: "#/definitions/HATEOASLinks"
  BenchmarkHandle:
    type: object
    required:
    - id
    - name
    - links
    - parameters
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      instructions:
        type: string
      parameters:
        type: array
        items:
          type: object
          required:
          - id
          - name
          - datatype
          - index
          - required
          properties:
            id:
              type: string
            name:
              type: string
            datatype:
              type: string
            index:
              type: integer
            required:
              type: boolean
            description:
              type: string
            as:
              type: string
            defaultValue:
              type: string
            parent:
              type: string
            values:
              type: array
              items:
                type: object
                required:
                - value
                properties:
                  name:
                    type: string
                  value:
                    type: string
                  isDefault:
                    type: boolean
      links:
        $ref: "#/definitions/HATEOASLinks"
  BenchmarkLeaderboard:
    type: object
    description: "Ordered list of run results"
    required:
    - ranking
    - schema
    - links
    properties:
      ranking:
        type: array
      schema:
        type: array
        items:
          type: object
          required:
          - id
          - name
          - type
          properties:
            id:
              type: string
            name:
              type: string
            type:
              type: string
      ranking:
        type: array
        items:
          type: object
          required:
          - run
          - submission
          - results
          properties:
            run:
              type: object
              required:
              - id
              - createdAt
              - startedAt
              - finishedAt
              properties:
                id:
                  type: string
                createdAt:
                  type: string
                startedAt:
                  type: string
                finishedAt:
                  type: string
            submission:
              type: object
              required:
              - id
              - name
              properties:
                id:
                  type: string
                name:
                  type: string
            results:
              type: array
              items:
                type: object
                required:
                - id
                - value
                properties:
                  id:
                    type: string
                  value:
                    type: integer
      links:
        $ref: "#/definitions/HATEOASLinks"
  BenchmarkListing:
    type: object
    required:
    - benchmarks
    - links
    properties:
      benchmarks:
        type: array
        items:
          $ref: "#/definitions/BenchmarkDescriptor"
      links:
        $ref: "#/definitions/HATEOASLinks"
  HATEOASLinks:
    type: array
    description: "List of HATEOAS references"
    items:
      $ref: "#/definitions/HATEOASRef"
  HATEOASRef:
    type: object
    description: "HATEOAS reference containing relationship type and HTTP reference"
    required:
    - rel
    - href
    properties:
      rel:
        type: string
        description: "Relationship type"
      href:
        type: string
        description: "HTTP link"
  RunArguments:
    type: object
    description: "Arguments for a new benchmark run"
    required:
    - arguments
    properties:
      arguments:
        type: array
        items:
          type: object
  RunState:
    type: object
    description: "Current state of a benchmark run"
    required:
    - id
    - state
    - links
    properties:
      id:
        type: string
      state:
        type: string
      startedAt:
        type: string
      finishedAt:
        type: string
      messages:
        type: array
        items:
          type: string
      links:
        $ref: "#/definitions/HATEOASLinks"
  ServiceDescriptor:
    type: object
    description: "Descriptor containing basic service properties"
    required:
    - name
    - version
    - links
    properties:
      name:
        type: string
      version:
        type: string
      links:
        $ref: "#/definitions/HATEOASLinks"
  UserCredentials:
    type: object
    description: "User login credentials"
    required:
    - username
    - password
    properties:
      username:
        type: string
      password:
        type: string
  UserHandle:
    type: object
    description: "Information about a registered user"
    required:
    - id
    - username
    - links
    properties:
      id:
        type: string
      username:
        type: string
      token:
        type: string
      links:
        $ref: "#/definitions/HATEOASLinks"
  UserIdentifier:
    type: object
    description: "Identifier for a registered user"
    required:
    - id
    properties:
      id:
        type: string
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
